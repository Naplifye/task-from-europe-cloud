---
- name: deploy nodeapp to gke
  hosts: localhost  
  gather_facts: false   
  tasks:
    - name: Create a k8s namespace  
      kubernetes.core.k8s:    
        state: present    
        definition:      
          apiVersion: v1      
          kind: Namespace      
          metadata:        
            name: nodeapp-dev

    - name: Create nodeapp deployment
      kubernetes.core.k8s:  
        state: present   
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: nodeapp
            namespace: nodeapp-dev
          spec:
            selector:
              matchLabels:
                run: nodeapp
            template:
              metadata:
                labels:
                  run: nodeapp
              spec:
                containers:
                - image: us-central1-docker.pkg.dev/capable-hangout-470415-c7/docker-repo/nodeapp:1.21.0
                  imagePullPolicy: IfNotPresent
                  name: nodeapp
                  ports:
                  - containerPort: 3000
                    protocol: TCP
                  env:
                  - name: MONGODB_MASTER
                    value: "35.225.78.82"
                  - name: MONGODB_SLAVE
                    value: "35.225.78.82"
                  - name: MONGODB_ARBITER
                    value: "35.225.78.82"
                  resources:
                    limits:
                      cpu: 500m
                    requests:
                      cpu: 200m

    - name: Create nodeapp service
      kubernetes.core.k8s:  
        state: present   
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: nodeapp
            namespace: nodeapp-dev
          spec:
            ports:
            - port: 80
              protocol: TCP
              targetPort: 3000
            selector:
              run: nodeapp
            type: NodePort

    - name: Create autoscaler
      kubernetes.core.k8s:  
        state: present   
        definition:
          apiVersion: autoscaling/v2
          kind: HorizontalPodAutoscaler
          metadata:
            name: nodeapp
            namespace: nodeapp-dev
          spec:
            scaleTargetRef:
              apiVersion: apps/v1
              kind: Deployment
              name: nodeapp
            minReplicas: 2
            maxReplicas: 10
            metrics:
              - type: Resource
                resource:
                  name: cpu
                  target:
                    type: Utilization
                    averageUtilization: 50

    - name: Create ingress secret
      kubernetes.core.k8s:    
        state: present   
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: secret-tls
            namespace: nodeapp-dev
          data:
            tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lVZjd6a0tyZkJLTngvTGh4NjA0dnhWU0g2VFlNd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0ZERVNNQkFHQTFVRUF3d0piRzlqWVd4b2IzTjBNQjRYRFRJMU1Ea3dOVEU0TVRJMU9Gb1hEVEkxTVRBdwpOVEU0TVRJMU9Gb3dGREVTTUJBR0ExVUVBd3dKYkc5allXeG9iM04wTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBenM2enhZYVpoZ3lsS21jQy8zZnBkYzFBc29nWFF3Sy9TYWp1S1VEcno4VTgKRm5MWXVMS2JaTzVyZHlTQ1dabnRvdWR3ZktDRnJPTmw2SDVRVWpNWmZIVUVWOGNFN2c0Z2p3aU1oZU5rTHltYgpWa3E0QURZQWdZSndtUTFnaUNFYTl4NUNWSW8wNlBFdEIrUnhLUUMwcWpFNk9ZdTU3elZ3bEUzcGJJaitBcmEyCmd0OW41aW0zNWFMMlM5Q2V1K1o1MVduK24wcDR1RTlSTTJnMklGY2dVRDcrcDRQNHB5VmZFYzd4U2xRb3VrMUYKbDIrMEQySHFtTVpqOWk2VzI5SGIwUzYzV2xMbG82clNFOE1KeU82MEZFU2dEaUk4dEZPUHNOOXhkemtLYmRxZwpJZXJ5WjB3WkkwR1lwdFhWRU5JZ3Vic1Z2WFNWMDdCNlNNQzdvNE9hY1FJREFRQUJvMWt3VnpBVUJnTlZIUkVFCkRUQUxnZ2xzYjJOaGJHaHZjM1F3Q3dZRFZSMFBCQVFEQWdlQU1CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUIKTUIwR0ExVWREZ1FXQkJUajFob1RmK3l3eXpOQldLc0xjd3RaZ2RRWE5qQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBUjBHOTBNM0p4S2kxYVJFQk42ZDhYWXJvcHhlWDRXR1FpVlc0WVlOanNDcElnTlZGUVJUa0d2eFg2OGNVClp2T2NTYloyR1ArTDlVeUZzNTIzdHVNTnlRMzdLNzhGRDJmZkU4S0pHcFFLbXhRUWFBQnJrKzR0bUVWNHNjbTEKaDVGc21nN0lsMlhoSDdidXRpRTdUYWR2VTF4RFNSSU9nSEJWZUFTNXBpcGcxc0pyYmprOFV6LytqMm9ha3l5YQpQU0pxN0tnQUZYMm8rdWRTZ21sVlpFczFCWXdBb24vcFFrZS9CdzY4VHRWNFE2YUpHRlFEbHI1cUNwRXc5ZkRWCll2WlJHc0paVGJ6dkF0M01yc3VuM0xKQktodFN3UEo3OFY5TUk5Z25vLzRvdlNqcGI2YkpXMEdTWlRPcko5RFoKWTV5emZXcG0zRjBPQi9obWg0b3l0aWZTUnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
            tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRRE96clBGaHBtR0RLVXEKWndML2QrbDF6VUN5aUJkREFyOUpxTzRwUU92UHhUd1djdGk0c3B0azdtdDNKSUpabWUyaTUzQjhvSVdzNDJYbwpmbEJTTXhsOGRRUlh4d1R1RGlDUENJeUY0MlF2S1p0V1NyZ0FOZ0NCZ25DWkRXQ0lJUnIzSGtKVWlqVG84UzBICjVIRXBBTFNxTVRvNWk3bnZOWENVVGVsc2lQNEN0cmFDMzJmbUtiZmxvdlpMMEo2NzVublZhZjZmU25pNFQxRXoKYURZZ1Z5QlFQdjZuZy9pbkpWOFJ6dkZLVkNpNlRVV1hiN1FQWWVxWXhtUDJMcGJiMGR2UkxyZGFVdVdqcXRJVAp3d25JN3JRVVJLQU9JankwVTQrdzMzRjNPUXB0MnFBaDZ2Sm5UQmtqUVppbTFkVVEwaUM1dXhXOWRKWFRzSHBJCndMdWpnNXB4QWdNQkFBRUNnZ0VBQU1uU21mT3FrbjRVMlJzSWJMbmp6QjBBQjA0ejF5cGpycCswRWczYkl2RWgKQ3EySVp2ZllxM2lwM3phUlAvbmNFK0s4VDkvNng4OGNISUtkYlhBZ0dPbmNualcyTHBsNDJxSzczN3pLQW50WgpuMmxzZ2MreTQ4dUFBTGdIZ0sxWTlzMHpqOTFHV0xHbXJDRGMranplODNFa1JDNDZBMlZFUWNSNW1kTjhpR2ZHCmU4YmZhTS9SNFpnRkE5ZjhxckVDVmFEOVR5eGg2d2NVNXlJcnVKVWpHS0ZoQksrTkRTbXhRb2xLeEdha2R1TkQKcngyZlI3c0I1YWM5dS9rOG4wZ2R5QXdqcXJWcys0ckkyMWh5Ulk2YUhKdndmNk1YMzZwVXhEdzUwY1Ryd3E2RApVR3gvSkkyYlJ0cDlERno1dnBRWlAreW1nVUJtc1NKd1lGTTRXZnJOdVFLQmdRRHd4WFNJR2Jzc3pqZ01qMmN6CjU2c2Q2RzZ1SHNpdTV0TEhSdHlmdldFakVJOHc3UEREeG1oOWt2ZHNTaW10Q3RYTlA5YjNvTENpMUk4cWsyaXEKVllmVnJ6d1N1VmhNS0xRNUl2a3d3MmRSUmpiczlzTXJXbElLcURsL1AwWjZVRTE2b0JyeE9maDAyTFU0d3MxKwovdnZpMWt1Y0R5N3hLc1Q5aHZzckUvU2xQUUtCZ1FEYjQwNnM0MENUakZWSWZRelg4aHZvcmFHMzAvNHhrdnNvCmg0bmJvbmRCK0ZOdUJvQlpOSzdKQXFHVlhsdk9UKy9MK2dsakdDZFVhUXhOZlJwY3RWblhnelFBMWROM0w3ZUQKSGo4NWdsUDZsVTFLVXd6cFMzTlVTeGJ5WlBWRDE1ZTlPWmh1eEdIOXBuOSs5RHQxeDRtUkNQQlE5dk0yejdsRQpUTEEwL1FwbFJRS0JnUUNwemRnZGxHZ1pkV2E2RlBqbjlsOE1QTHl5T0N1NGpqbmhLT3k0Qzh2Uit2L0J0WmtuCnVXcEFCY0pSc1F3cmFoVFhLRXJuWVlDeGxjOVNhNXZKWllEakJ5OEsxWVNjVWFpcEV5MURZc3dlMmJJcTlPMDQKU2Y3S1hWSVBtQVNRaHNuZHpjU3lrL3ZTREhQaWtDQjFqRWNBOTdsaldxSDBuQUZKL0VSdllTZU0wUUtCZ0U5bwpKL3BSV3ZtdHZRS2ZmaXJoMk9oUEE4Nng5T01NTkQwdnJUNHV6cWg1T0EvTXN6OER3bmIreDBGOHdPU2hnM1NECkNDN01BeS85ZTU3a0pjZ0RDYjNGT050d1hKeDNFK3Q2MmRRMzE0SHZ0dWkzVXp0UXJ3WnEwNCtYbStiekRXNGQKUllvQ3kyeGhXenVLa1lwNEU1clh3b2xLbFF4Zk9ZV0x1RHA2Z3UyTkFvR0FjNllsNU5SMUNYNnZuYUQ4eXEzRApCc0QzeGlrMFZSMmlCMFlwY0liZHZDa3ZhL29COU1DSHQzbzR3cEhmTTl1eEJHUmE2RFMrZzgzUEE2K2pIK3YwCkdEOWhHK2hMUnVBWDcxNTAyVHNaK3VlK3c1WGVQOC85M0RSVjNyMVlWd3ZuTmx2bEZ1bUtyaDJnWmd4QUEzTGEKdHcwR2JFM3JRY3ZYLy9WV1JHenNPNUU9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K

    - name: Create ingress
      kubernetes.core.k8s:  
        state: present   
        definition:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: ingress
            namespace: nodeapp-dev
            annotations:
              kubernetes.io/ingress.global-static-ip-name: "gke-static-ip"
          spec:
            tls:
            - hosts:
                - localhost
              secretName: secret-tls
            rules:
            - host: localhost
            - http:
                paths:
                - path: /*
                  pathType: ImplementationSpecific
                  backend:
                    service:
                      name: nodeapp
                      port:
                        number: 80
  